{"ast":null,"code":"var _jsxFileName = \"/home/tungnt/Documents/technology-blog-client/src/components/HomeComponent.js\";\nimport React, { Component } from \"react\";\nimport \"../css/home.css\";\nimport { Row, Col, Container } from 'react-bootstrap';\nimport UserService from \"../services/UserService.js\";\nimport PostService from \"../services/PostService.js\";\nimport \"../css/post.css\";\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePost = slug => {\n      PostService.getSlug(slug).then(response => {\n        alert(response.data.content);\n      });\n    };\n\n    this.state = {\n      content: [],\n      tags: []\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(response => {\n      response.data.forEach(element => {\n        PostService.getPostwithTag(element.id).then(response => {\n          element.tags = response.data[\"tags\"][0];\n        });\n      });\n      this.setState({\n        content: response.data\n      });\n    }, PostService.getTopTags().then(response => {\n      this.setState({\n        tags: response.data\n      });\n    }), error => {\n      this.setState({\n        content: error.response && error.response.data || error.message || error.toString()\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.content);\n    console.log(this.state.tags);\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, this.state.content.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.id,\n        className: \"home-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"course-preview\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.thumbnail,\n        alt: \"none\",\n        class: \"img-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"course-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      }, item.title), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, item.brief), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, item.user_id), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, \"TAG: \", item.tags), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }, \"Date: \", item.createdAt), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn\",\n        onClick: () => this.handlePost(item.slug),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }\n      }, \"Read\"))));\n    })), /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, this.state.tags.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"home-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"course-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      }, item.name, \"(\", item.count, \")\"))));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/tungnt/Documents/technology-blog-client/src/components/HomeComponent.js"],"names":["React","Component","Row","Col","Container","UserService","PostService","Home","constructor","props","handlePost","slug","getSlug","then","response","alert","data","content","state","tags","componentDidMount","getPublicContent","forEach","element","getPostwithTag","id","setState","getTopTags","error","message","toString","render","console","log","map","item","thumbnail","title","brief","user_id","createdAt","name","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../css/home.css\";\nimport { Row, Col, Container } from 'react-bootstrap';\nimport UserService from \"../services/UserService.js\";\nimport PostService from \"../services/PostService.js\";\nimport \"../css/post.css\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: [],\n      tags: []\n    };\n  }\n  \n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        response.data.forEach(element => {\n          PostService.getPostwithTag(element.id).then(\n            response => {\n              element.tags = response.data[\"tags\"][0];\n            }\n          )\n        });\n        this.setState({\n          content: response.data\n         \n        });\n      },\n        PostService.getTopTags().then(\n          response => {\n            this.setState({\n              tags: response.data\n            });\n          }\n        ),\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n  \n  handlePost = (slug) => {\n    PostService.getSlug(slug).then(response => {\n      alert(response.data.content);\n    })\n  }\n  render() {\n    console.log(this.state.content);\n    console.log(this.state.tags);\n    return (\n      <Container>\n        <Row>\n          <Col sm={9}>\n            {this.state.content.map(item => {\n              return <div key={item.id} className=\"home-container\">\n              <div className=\"course\">\n                <div className=\"course-preview\">\n                <img src={item.thumbnail} alt=\"none\" class=\"img-fluid\"></img>\n                </div>\n                <div className=\"course-info\">\n                  <h3>{item.title}</h3>\n                  <h6>{item.brief}</h6>\n                  <p>{item.user_id}</p>\n                  <h6>TAG: {item.tags}</h6>\n                  <h6>Date: {item.createdAt}</h6>\n                  <button className=\"btn\" onClick={() => this.handlePost(item.slug)}>Read</button>\n                </div>\n              </div>\n            </div>\n            })}\n          </Col>\n          <Col sm={3}>\n          {this.state.tags.map(item => {\n              return <div className=\"home-container\">\n              <div className=\"course\">\n                <div className=\"course-info\">\n                  <h6>{item.name}({item.count})</h6>\n                </div>\n              </div>\n            </div>\n            })}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}